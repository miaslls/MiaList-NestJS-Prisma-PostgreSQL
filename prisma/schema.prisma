generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  username String   @unique
  password String
  role     UserRole @default(USER)

  categories Category[]
  tags       Tag[]
  lists      List[]

  @@map("user")
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  lists List[]

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@map("category")
}

model Tag {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  lists List[]

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@map("tag")
}

model List {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  icon      String
  type      ListType @default(CHECK)
  pinned    Boolean  @default(false)
  createdAt DateTime @map("created_at")

  entries Entry[]

  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
  Tag        Tag?     @relation(fields: [tagId], references: [id])
  tagId      String?  @db.ObjectId
  User       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId

  @@map("list")
}

model Entry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  starred   Boolean  @default(false)
  createdAt DateTime @map("created_at")

  completed Boolean?
  date      DateTime?
  amount    Float?
  hyperlink String?

  List   List?   @relation(fields: [listId], references: [id])
  listId String? @db.ObjectId

  @@map("entry")
}

enum UserRole {
  ADMIN
  USER
}

enum ListType {
  BULLET
  CHECK
}
